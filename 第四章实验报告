第4章 程序的控制结构
学习目标
（1）了解程序的基本结构并绘制流程图。
（2）掌握程序的分支结构。
（3）运用if语句实现分支结构。
（4）掌握程序的循环结构。
（5）运用 for语句和while语句实现循环结构。
（6）掌握随机库的使用方法。
（7）了解程序的异常处理及用法。
程序练习题
4.1 猜数游戏。在程序中预设一个 0-9 之间的憋数，让用户通过键盘输入所猜
的数，如果大于预设的数，显示“遗憾，太大了”；小于预设的数，显示“遗憾，太
小了”，如此循环，直至猜中该数，显示“预满N次，你猜中了！”，其中N是用户
输入数字的次数。
4.2 统计不同字符个数。用户从键盘输入 行字符，编写一个程序，统计并输
出其中英文字符、数字、空格和其他字符的个数。
4.3 最大公约数计算。从键盘接收两个移数，编写程序求出这两个整数的最大
公约数和最小公倍数（提示；求最大公约数可用製转相除法，求最小公倍数则用两
数的积除以最大公约数即可）。
4.4 猜数游戏续。改编程序练习题4.1，让计算机能够随机产生一个预设数字，
范围在0～100之间，其他游戏规则不变。
4.5 猜数游戏续。对于程序练习题4.4程序，当用户输入的不是整数（如字母、
浮点数等）时，程序会终止执行退出。改编该程序，当用户输入出错时给出“输入
内容必须为整数！”的提示，并让用户重新输入。
4.6 羊车门问题。有3扇关闭的门，一扇门后面停着汽车，其余门后是山羊，
只有主持人知道每扇门后面是什么。参赛者可以选择一扇门，在开启它之前，主持
人会开启另外一扇门，露出门后的山羊，然后允许参赛者更换自己的选择。请问：
参赛者更换选择后能否增加猜中汽车的机会？——这是一个经典问题。
请使用 random 库对这个随机事件进行预测，分别输出参赛者改变选择和坚持
选择获胜的机率。
第23页/共79页
[4.1]
from random import randint
num=randint(1,10)
tim=0
while1:
    try:
        putnum=eval(input("请输入您猜测的数字："))
        tim+=1
        if putnum>num:
              print("遗憾！太大了")
        elifputnum<num:
              print("遗憾！太小了")
        elifputnum==num:
              print("预测{}次，你猜中了！".format(tim))
              break
except:
  print("输入有误！")
  
[4.2]:
stri=input("请输入您想要的字符串：")
kong=0
alpha=0
chi=0
num=0
other=0
for i in stri:
  if 1 ==
    kong +=1
  elif'0'<=1 <='9':
    num+=1
  elif i>=u'\u4e00'and i<=u'\u9fa5':
    chi+=1
  elif True mm i.isalpha()：
    alpha+=1
  else:
    17 othez+=1
print(“您输入的字符串中有（）个空格，（）个数字，（）个中文，（）个英文字符，（）个其他字符".format(kong,num,chi,alpha,other)）

[4.3]：
,b=eval(input（"请输入两个整数，中间用，隔开："））
c=a*b
if a<b:
  a,b=b,a
while False == (a in[0,1])：
  b,a=a,b6a
c=c/b
print("最小公约数为：（），最大公倍数为：（）".format(b,e））

[4.4]:
from random import *
seed(100)
num=randint (0,100)
tim=0
while 1:
  try:
    putnum=eval(input("请输入您猜测的数字："！
    tim+=1
    if putnun > num
       print（"遗憾！太大了”）
    if putnum <num:
        print(“遗憾！太小了•)
    elif putnum==num;
        print("预测（）次，你猜中了！”.format(tim)）
        break
except:
print（"输入有误！”）

